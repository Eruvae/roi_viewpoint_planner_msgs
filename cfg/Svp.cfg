#!/usr/bin/env python
# Example config: https://github.com/ros/dynamic_reconfigure/blob/noetic-devel/cfg/Test.cfg

PACKAGE = "semantic_view_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("cluster_density", double_t, 1 << 1, "Density of cluster points", 0.02, 0.001, 1.0)
gen.add("cluster_min_points", int_t, 1 << 1, "Minimum points per cluster", 10, 1, 100)

gen.add("stem_fitting_dist_thresh", double_t, 1 << 2, "Distance threshold for stem fitting", 0.01, 0.001, 1.0)
gen.add("stem_fitting_max_iterations", int_t, 1 << 2, "Maximum iterations for stem fitting", 10000, 1, 1000000)
gen.add("stem_fitting_min_probability", double_t, 1 << 2, "Minimum probability for stem fitting", 0.99, 0.0, 1.0)

gen.add("visualize_leaf_bb", bool_t, 1 << 2, "Visualize leaf bounding boxes", False)
gen.add("visualize_fruit_bb", bool_t, 1 << 2, "Visualize leaf bounding boxes", False)
gen.add("visualize_stem_bb", bool_t, 1 << 2, "Visualize leaf bounding boxes", True)

gen.add("stem_target_dist", double_t, 1 << 3, "Distance of targets from stem endpoint", 0.05, 0, 1.0)

workspace = gen.add_group("Workspace")

workspace.add("ws_min_x", double_t, 1 << 16, "Workspace minimum x coordinate", -1.0, -10.0, 10.0)
workspace.add("ws_min_y", double_t, 1 << 16, "Workspace minimum y coordinate", -1.0, -10.0, 10.0)
workspace.add("ws_min_z", double_t, 1 << 16, "Workspace minimum z coordinate", -1.0, -10.0, 10.0)
workspace.add("ws_max_x", double_t, 1 << 17, "Workspace maximum x coordinate", 1.0, -10.0, 10.0)
workspace.add("ws_max_y", double_t, 1 << 17, "Workspace maximum y coordinate", 1.0, -10.0, 10.0)
workspace.add("ws_max_z", double_t, 1 << 17, "Workspace maximum z coordinate", 1.0, -10.0, 10.0)

samplingreg = gen.add_group("Sampling region")

samplingreg.add("sr_min_x", double_t, 1 << 18, "Sampling region minimum x coordinate", -1.0, -10.0, 10.0)
samplingreg.add("sr_min_y", double_t, 1 << 18, "Sampling region minimum y coordinate", -1.0, -10.0, 10.0)
samplingreg.add("sr_min_z", double_t, 1 << 18, "Sampling region minimum z coordinate", -1.0, -10.0, 10.0)
samplingreg.add("sr_max_x", double_t, 1 << 19, "Sampling region maximum x coordinate", 1.0, -10.0, 10.0)
samplingreg.add("sr_max_y", double_t, 1 << 19, "Sampling region maximum y coordinate", 1.0, -10.0, 10.0)
samplingreg.add("sr_max_z", double_t, 1 << 19, "Sampling region maximum z coordinate", 1.0, -10.0, 10.0)

exit(gen.generate(PACKAGE, "planner_node", "Svp"))
